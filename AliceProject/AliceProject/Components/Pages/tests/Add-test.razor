@page "/tests/{userId}/add"
@rendermode InteractiveServer
@using AliceProject.Models
@inject IModelService<Test> TestService
@inject IBreadcrumbService BreadcrumbService
@inject NavigationManager Navigation
@attribute [Authorize()]

<h3>Create New Test</h3>

<MudPaper Elevation="2" Class="px-16 py-8 ma-2">
    <MudTextField @bind-Value="testName" Label="Test Name" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
    <MudButton Class="mt-4" Variant="Variant.Outlined" Size="Size.Small" OnClick="@Cancel">Cancel</MudButton>
    <MudButton Class="mt-4" Variant="Variant.Outlined" Size="Size.Small" OnClick="@InsertTest">Save</MudButton>
</MudPaper>
@code {
    [Parameter]
    public string userId { get; set; }

    private string testName;
    private Guid newGuid = Guid.NewGuid();
    protected override async Task OnInitializedAsync()
    {
        await BreadcrumbService.SetItems([new(text: "Tests", href: "/tests", icon: Icons.Material.Filled.AllInbox), new(text: "Add", href: $"/tests/{userId}/add", icon: Icons.Material.Filled.Add)]);
        await BreadcrumbService.RefreshLayout();
    }
    private async Task InsertTest()
    {
        var test = new Test
        {
            Id = newGuid,
            Name = testName,
            Directory = userId +"/"+newGuid + "/",
            UserId = Guid.Parse(userId)
        };
        await TestService.Add(test);
        Navigation.NavigateTo($"/tests");
        StateHasChanged();
    }

    private void Cancel()
    {
        Navigation.NavigateTo($"/tests");
    }
}