@page "/tests/update/{userId}/{testId}"
@rendermode InteractiveServer
@using AliceProject.Models
@inject IModelService<Test> TestService
@inject IBreadcrumbService BreadcrumbService
@inject ISnackbar Snackbar
@inject NavigationManager Navigation
@attribute [Authorize()]
<h3>Update Test</h3>

@if (test == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudPaper Elevation="2" Class="px-16 py-8 ma-2">
        <MudTextField @bind-Value="test.Name" Label="Test Name" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
        <MudTextField @bind-Value="test.Directory" Label="Directory" Variant="Variant.Outlined" Margin="Margin.Dense" Disabled="true"></MudTextField>
        
        <MudButton Class="mt-4" Variant="Variant.Outlined" Size="Size.Small" OnClick="@Cancel">Cancel</MudButton>
        <MudButton Class="mt-4" Variant="Variant.Outlined" Size="Size.Small" OnClick="@UpdateTest">Save</MudButton>
    </MudPaper>
}

@code {
    [Parameter]
    public String userId { get; set; }
    [Parameter]
    public String testId { get; set; }

    private Models.Test test;

    protected override async Task OnInitializedAsync()
    {
        test = await TestService.Get(Guid.Parse(testId));
        await BreadcrumbService.SetItems([new(text: "Users", href: "/users", icon: Icons.Material.Filled.Storage),
            new(text: userId, href: "/users", icon: Icons.Material.Filled.Storage),
            new(text: "Tests", href: $"/tests/{userId}", icon: Icons.Material.Filled.AllInbox),
            new(text: "Tests", href: $"/tests/{userId}/{testId}", icon: Icons.Material.Filled.Edit)]);
        await BreadcrumbService.RefreshLayout();
    }

    private async Task UpdateTest()
    {
        if (test.Name == "")
        {
            Snackbar.Add("Name is required for Tests!", Severity.Error);
            return;
        }
        await TestService.Update(test);

        Navigation.NavigateTo("/tests");
        Snackbar.Add("Test Updated!", Severity.Success);
    }

    private void Cancel()
    {
        Navigation.NavigateTo($"/tests/{userId}");
    }
}