@using BlazorApp2.Services
@inject IBreadcrumbService breadcrumbservice
@inherits LayoutComponentBase


<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />

<MudLayout>
    <MudAppBar Color="Color.Transparent" Dense="true" Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudBreadcrumbs Items="_items"></MudBreadcrumbs>
        <MudSpacer />
        <AuthorizeView>
            <Authorized>
                @if (this._isDarkMode)
                {
                    <MudIconButton Icon="@Icons.Material.Filled.LightMode" OnClick="@this.ToggleDarkMode" Title="To light mode" />
                }
                else
                {
                    <MudIconButton Icon="@Icons.Material.Filled.DarkMode" OnClick="@this.ToggleDarkMode" Title="To dark mode" />
                }
            </Authorized>
        </AuthorizeView>
        <MudIconButton Href="https://github.com/domnanob/Alice-Project" Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" />
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <MudPaper Width="250px" Class="d-inline-flex py-3" Elevation="0">
            <MudNavMenu Class="mud-width-full">
                <MudText Typo="Typo.h6" Class="px-4">Alice Project</MudText>
                <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">Automated Lab Inspector</MudText>
                <MudDivider Class="my-2" />
                @*
                <MudNavLink Href="/dashboard" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>
                <MudNavGroup Title="Level 0" Icon="@Icons.Material.Filled.Settings" Expanded="true">
                    <MudNavGroup Title="Level 1" Icon="@Icons.Material.Filled.AdminPanelSettings" Expanded="true">
                        <MudNavGroup Title="Level 2" Icon="@Icons.Material.Filled.People" Expanded="true">
                            <MudNavGroup Title="Level 3" Icon="@Icons.Material.Filled.Lock" Expanded="true">
                                <MudNavLink Href="/delete" Icon="@Icons.Material.Filled.DeleteForever">Delete Password</MudNavLink>
                            </MudNavGroup>
                        </MudNavGroup>
                    </MudNavGroup>
                </MudNavGroup>
                *@
                <AuthorizeView Roles="admin">
                    <Authorized>
                        <MudNavLink Href="/users" Icon="@Icons.Material.Filled.Storage">Users</MudNavLink>
                        <MudNavLink Href="/roles" Icon="@Icons.Material.Filled.Storage">Roles</MudNavLink>
                    </Authorized>
                </AuthorizeView>
                <AuthorizeView>
                    <NotAuthorized>
                        <MudNavLink Href="/account/login" Icon="@Icons.Material.Filled.Login">Login</MudNavLink>
                        <MudNavLink Href="/account/register" Icon="@Icons.Material.Filled.HowToReg">Register</MudNavLink>
                    </NotAuthorized>
                    <Authorized>
                        <MudNavLink Href="/tests" Icon="@Icons.Material.Filled.AllInbox">Tests</MudNavLink>
                        <MudNavLink Href="/account/logout" Icon="@Icons.Material.Filled.Logout">Logout</MudNavLink>
                    </Authorized>
                </AuthorizeView>
            </MudNavMenu>
        </MudPaper>
    </MudDrawer>
    <MudMainContent>
        <MudPaper Class="pa-16 ma-2" Elevation="0">
            <CascadingValue Value="this">
                @Body
            </CascadingValue>
        </MudPaper>
    </MudMainContent>
</MudLayout>
@code {
    private MudTheme _theme = new();
    private bool _isDarkMode = false;
    bool _drawerOpen = true;

    private List<BreadcrumbItem> _items = new();
    protected override async Task OnInitializedAsync()
    {
        await breadcrumbservice.SetLayout(this);
        _items = await breadcrumbservice.GetItems();
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    void ToggleDarkMode()
    {
        _isDarkMode = !_isDarkMode;
    }
    public async void RefreshLayout()
    {
        _items = await breadcrumbservice.GetItems();
        StateHasChanged();
    }
    public async void ResetLayout()
    {
        await breadcrumbservice.Reset();
        await breadcrumbservice.AddItem(new BreadcrumbItem("Login", "/account/login"));
        _items = await breadcrumbservice.GetItems();
        StateHasChanged();
    }
}