@page "/roles/users/{roleId:int}"
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject BlazorApp2.Services.IRoleService RoleService
@inject BlazorApp2.Services.IUserService UserService

<h3>Roles Table</h3>

@if (users == null || roles == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>FirstName</th>
                <th>LastName</th>
                <th>LastName</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Id</td>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Email</td>
                    <td>
                        <select class="form-control" name="roles" id="roles" @onchange="(e => ChangeRole(e))">
                            @foreach (var role in roles)
                            {
                                @if (@user.RoleId == @role.Id)
                                {
                                    <option value="@role.Id;@user.Id" selected>@role.Name</option>
                                }
                                else
                                {
                                    <option value="@role.Id;@user.Id">@role.Name</option>
                                }
                            }
                        </select>
                    </td>
                </tr>
            }
        </tbody>
    </table>

}

@code {
    [Parameter]
    public int roleId { get; set; }

    private List<Models.User> users;
    private List<Models.Role> roles;
    private int selectedItem { get; set; }

    protected override async Task OnInitializedAsync()
    {
        users = await UserService.GetUsers();
        users = users.Where(x => x.RoleId == roleId).ToList();
        roles = await RoleService.GetRoles();

    }

    private async void ChangeRole(ChangeEventArgs e)
    {
        string value = e.Value.ToString();
        int roleId = int.Parse(value.Split(";")[0]);
        int userId = int.Parse(value.Split(";")[1]);

        Models.User u = users.Single(x => x.Id == userId);
        u.RoleId = roleId;

        await UserService.UpdateUser(u);

        Navigation.NavigateTo("/roles");

    }

}