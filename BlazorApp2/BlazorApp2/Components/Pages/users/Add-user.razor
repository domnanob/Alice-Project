@page "/users/add"
@rendermode InteractiveServer
@using BlazorApp2.Models
@inject BlazorApp2.Services.IUserService UserService
@inject NavigationManager Navigation

<h3>Add New User</h3>

<div class="mb-3">
    <label for="userFirstName" class="form-label">First Name</label>
    <input type="text" class="form-control" id="userName" @bind="newUserFirstName" />
</div>
<div class="mb-3">
    <label for="userLastName" class="form-label">Last Name</label>
    <input type="text" class="form-control" id="userLastName" @bind="newUserLastName" />
</div>
<div class="mb-3">
    <label for="emailAddress" class="form-label">Email Address</label>
    <input type="email" class="form-control" id="emailAddress" @bind="emailAddress" />
</div>
<div class="mb-3">
    <label for="newPassword" class="form-label">Password</label>
    <input type="password" class="form-control" id="newPassword" @bind="newPassword" />
</div>

<button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
<button class="btn btn-primary" @onclick="InsertUser">Save</button>

@code {
    private string newUserFirstName;
    private string newUserLastName;
    private string emailAddress;
    private string newPassword;

    private async Task InsertUser()
    {
        // Create a new club object
        var user = new Models.User
            {
                FirstName = newUserFirstName,
                LastName = newUserLastName,
                Email = emailAddress,
                Password = newPassword,
                RoleId = 1
            };

        // Insert the club into the database
        await UserService.AddUser(user);

        // Close the modal and navigate back to the club page
        Navigation.NavigateTo("/users");
        StateHasChanged();
    }

    private void Cancel()
    {
        // Close the modal and navigate back to the club page
        Navigation.NavigateTo("/users");
    }
}