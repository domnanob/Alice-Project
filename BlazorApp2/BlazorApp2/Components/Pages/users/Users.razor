@page "/users"
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject BlazorApp2.Services.IModelService<User> UserService

<h3>User Table</h3>

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Id</td>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Email</td>
                    <td>
                        <button class="btn btn-warning btn-sm" @onclick="() => NavigateToUpdate(user.Id)">Update</button>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteUser(user.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

}

<button class="btn btn-primary" @onclick="OpenAddUserModal">Add New User</button>

@code {
    private List<Models.User> users;

    protected override async Task OnInitializedAsync()
    {
        users = await UserService.GetAll();

    }

    private void OpenAddUserModal()
    {
        Navigation.NavigateTo("/users/add");
    }

    private void NavigateToUpdate(Guid userId)
    {
        Navigation.NavigateTo($"/users/update/{userId}");
    }

    private async Task DeleteUser(Guid userId)
    {

        await UserService.Delete(userId);

        users = await UserService.GetAll();
    }
}